{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }} ${{ singularVar }}
 */
?>
{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
<div class="{{ pluralVar }} view">
    <h3><?php echo h(${{ singularVar }}->{{ displayField }}) ?></h3>

    <div class="panel panel-default">
        <div class="panel-heading">
        <?php
        echo $this->Navbars->actionButtons(['buttons_group' => 'view', 'model_id' => ${{ singularVar }}->id]);
        ?>
        </div>
        <div class="panel-body">
            <dl class="dl-horizontal">
{% if groupedFields['string'] %}
{% for field in groupedFields['string'] %}
{% if field not in ['created_by', 'modified_by'] %}
{% if associationFields[field] %}
{% set details = associationFields[field] %}

                <dt><?php echo __('{{ details.property|humanize }}'); ?></dt>
                <dd>
                    <?php
                    echo ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '';
                    ?>
                </dd>
{% else %}
                <dt><?php echo __('{{ field|humanize }}'); ?></dt>
                <dd>
                    <?php
                    echo h(${{ singularVar }}->{{ field }});
                    ?>
                </dd>
{% endif %}
{% endif %}
{% endfor %}
{% endif %}
{% if associations.HasOne %}
{% for alias, details in associations.HasOne %}
                <dt><?php echo __('{{ alias|underscore|singularize|humanize }}'); ?></dt>
                <dd>
                    <?php
                    echo ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '';
                    ?>
                </dd>
{% endfor %}
{% endif %}
{% if groupedFields.number %}
{% for field in groupedFields.number %}
{% if field not in ['id'] %}
                <dt><?php echo __('{{ field|humanize }}'); ?></dt>
                <dd>
                    <?php
                    echo $this->Number->format(${{ singularVar }}->{{ field }});
                    ?>
                </dd>
{% endif %}
{% endfor %}
{% endif %}
{% if groupedFields.date %}
{% for field in groupedFields.date %}
{% if field not in ['created', 'modified'] %}
                <dt><?php echo __('{{ field|humanize }}'); ?></dt>
                <dd>
                    <?php
                    echo h(${{ singularVar }}->to_display_timezone('{{ field }}'));
                    ?>
                </dd>
{% endif %}
{% endfor %}
{% endif %}
{% if groupedFields.boolean %}
{% for field in groupedFields.boolean %}
                <dt><?php echo __('{{ field|humanize }}'); ?></dt>
                <dd>
                    <?php
                    echo ${{ singularVar }}->{{ field }} ? __('Yes') : __('No');
                    ?>
                </dd>
{% endfor %}
{% endif %}
{% if groupedFields.text %}
{% for field in groupedFields.text %}
                <dt><?php echo __('{{ field|humanize }}'); ?></dt>
                <dd>
                    <?php
                    echo $this->Text->autoParagraph(h(${{ singularVar }}->{{ field }}));
                    ?>
                </dd>
{% endfor %}
{% endif %}
            </dl>
            <?php
            echo $this->element('Alaxos.create_update_infos', ['entity' => ${{ singularVar }}], ['plugin' => 'Alaxos']);
            ?>
        </div>
    </div>
</div>
